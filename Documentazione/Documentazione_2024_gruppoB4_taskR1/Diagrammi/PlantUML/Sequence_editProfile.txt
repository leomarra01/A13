@startuml
!theme plain
skinparam sequenceMessageAlign center
skinparam responseMessageBelowArrow true

actor User
participant "GUI Controller (T5)" as GUIController
participant "T23Service" as T23Service
participant "ServiceManager" as ServiceManager
participant "UserService" as UserService
participant "UserRepository" as UserRepository
participant "UserProfileRepository" as UserProfileRepository
database "Database" as DB

== Profile Edit Flow ==

User -> GUIController: Request Edit Profile
activate GUIController

GUIController -> T23Service: EditProfile(userEmail, bio, imagePath)
activate T23Service

T23Service -> ServiceManager: handleRequest("T23", "GetUsers")
activate ServiceManager

ServiceManager -> UserRepository: findByEmail(userEmail)
activate UserRepository

UserRepository --> ServiceManager: Return User
deactivate UserRepository

ServiceManager --> T23Service: Return User List
deactivate ServiceManager

T23Service -> UserService: findProfileByEmail(userEmail)
activate UserService

UserService -> UserRepository: findByEmail(userEmail)
activate UserRepository

UserRepository --> UserService: Return User
deactivate UserRepository

UserService -> UserService: Validate User Exists
UserService -> UserService: Get UserProfile

T23Service -> UserProfileRepository: save(userProfile)
activate UserProfileRepository

UserProfileRepository -> DB: Save Updated Profile
activate DB

DB --> UserProfileRepository: Save Confirmation
deactivate DB

UserProfileRepository --> T23Service: Save Success
deactivate UserProfileRepository

T23Service --> GUIController: Return Boolean(Success/Failure)
deactivate T23Service

alt Profile Edit Successful
    GUIController -> User: Render Success Message
else Profile Edit Failed
    GUIController -> User: Render Error Message
end

deactivate GUIController

@enduml