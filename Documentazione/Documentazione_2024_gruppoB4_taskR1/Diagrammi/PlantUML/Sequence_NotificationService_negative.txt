@startuml
!theme plain
actor Client
participant "GuiController (T5)" as GuiController
participant "T23Service (T5)" as T23Service
participant "T23 Controller" as T23Controller
participant "NotificationService (T23)" as NotificationService
participant "NotificationRepository (T23)" as NotificationRepository
database "Database" as DB

== Scenario: Non-Existent User ==
Client -> GuiController: Request notifications with invalid email
GuiController -> T23Service: getNotifications(invalidEmail)
T23Service -> T23Controller: GET /notifications
T23Controller -> NotificationService: Attempt to get user
T23Controller <-- NotificationService: User not found
T23Controller --> T23Service: 400 Bad Request
T23Service --> GuiController: Error response
GuiController --> Client: Show "User Not Found" Error

== Scenario: Unauthorized Notification Access ==
Client -> GuiController: Attempt to update notification not owned
GuiController -> T23Service: updateNotification(differentUserEmail, notificationID)
T23Service -> T23Controller: POST /update_notification
T23Controller -> NotificationService: Check notification ownership
T23Controller <-- NotificationService: Notification not owned by user
T23Controller --> T23Service: 403 Forbidden
T23Service --> GuiController: Access Denied
GuiController --> Client: Show "Unauthorized Access" Error

== Scenario: Invalid Notification ID ==
Client -> GuiController: Delete notification with invalid ID
GuiController -> T23Service: deleteNotification(userEmail, invalidID)
T23Service -> T23Controller: DELETE /delete_notification
T23Controller -> NotificationRepository: Check notification existence
NotificationRepository -> DB: Verify notification
DB --> NotificationRepository: No matching record
NotificationRepository --> T23Controller: Notification not found
T23Controller --> T23Service: 404 Not Found
T23Service --> GuiController: Notification Deletion Failed
GuiController --> Client: Show "Notification Not Found" Error

== Scenario: Database Connection Failure ==
Client -> GuiController: Create new notification
GuiController -> T23Service: NewNotification(userEmail, title, message)
T23Service -> T23Controller: POST /new_notification
T23Controller -> NotificationService: Attempt to save notification
NotificationService -> NotificationRepository: Save notification
NotificationRepository -> DB: Insert record
DB x--> NotificationRepository: Connection Error
NotificationRepository --> NotificationService: Database Error
NotificationService --> T23Controller: Save Failed
T23Controller --> T23Service: 500 Internal Server Error
T23Service --> GuiController: Notification Creation Failed
GuiController --> Client: Show "Service Unavailable" Error

== Scenario: Notification Creation Validation Failure ==
Client -> GuiController: Create notification with invalid data
GuiController -> T23Service: NewNotification(userEmail, "", "")
T23Service -> T23Controller: POST /new_notification
T23Controller -> NotificationService: Validate notification
T23Controller <-- NotificationService: Validation Failed
T23Controller --> T23Service: 400 Bad Request
T23Service --> GuiController: Validation Error
GuiController --> Client: Show "Invalid Notification Data" Error
@enduml